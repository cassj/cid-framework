AWSTemplateFormatVersion: '2010-09-09'
Description: CID Data Collection utilities for GitSync
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Deployment parameters'
        Parameters:
          - NestedTemplateBucket
          - CollectionAccountGitSyncRoleName
          - CollectionAccountCfnRoleName  
          - ManagementAccountCfnRoleName
          - ManagementAccountID
          

Parameters:
  NestedTemplateBucket:
    Type: String
    Description: Name of the S3 Bucket that needs to be created to store nested templates (until git-sync supports this natively)
    AllowedPattern: (?=^.{3,36}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9\-])$)
    Default: cid-datacollection-templates
  CollectionAccountGitSyncRoleName:
    Type: String
    Description: IAM role used by git-sync in the collection account
    Default: CidGitSyncRole
  CollectionAccountCfnRoleName:
    Type: String
    Description: IAM role used by CloudFormation to deploy CID data collection resources in the management account
    Default: CidCfnRole
  ManagementAccountCfnRoleName:
    Type: String
    Default: CidCfnRole
  ManagementAccountGitSyncRoleName:
    Type: String
    Default: CidGitSyncRole
  ManagementAccountID:
    Type: String
    AllowedPattern: ([a-z0-9\-, ]*?$)
    Description: Management account ID
 

Outputs:
  S3Bucket:
    Description: Name of S3 Bucket which will hold nested templates for git-sync
    Value: !Ref S3Bucket
  S3BucketARN:
    Description: ARN of S3 Bucket which will hold nested templates for git-sync
    Value: !GetAtt S3Bucket.Arn

Resources:
  CollectionAccountGitSyncRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${CollectionAccountGitSyncRoleName}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.sync.codeconnections.amazonaws.com 
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyName: CidGitSyncPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: SyncToCloudFormation
                Effect: Allow
                Action: 
                -  cloudformation:CreateChangeSet
                -  cloudformation:DeleteChangeSet
                -  cloudformation:DescribeChangeSet
                -  cloudformation:DescribeStackEvents
                -  cloudformation:DescribeStacks
                -  cloudformation:ExecuteChangeSet
                -  cloudformation:GetTemplate
                -  cloudformation:ListChangeSets
                -  cloudformation:ListStacks
                -  cloudformation:ValidateTemplate
                Resource: "*"
              - Sid: PolicyForManagedRules
                Effect: Allow
                Action: 
                - events:PutRule
                - events:PutTargets
                Resource: "*"
                Condition: 
                  StringEquals: 
                    "events:ManagedBy": "cloudformation.sync.codeconnections.amazonaws.com"
              - Sid: PolicyForDescribingRule
                Effect: Allow
                Action: "events:DescribeRule"
                Resource: "*"
  CollectionAccountCfnRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${CollectionAccountCfnRoleName}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com 
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyName: DeployPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "${NestedTemplateBucket}-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Suspended
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
            BlockPublicAcls : true
            BlockPublicPolicy : true
            IgnorePublicAcls : true
            RestrictPublicBuckets : true
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35 #S3 Bucket should have access logging configured
            reason: "This bucket is only used for temp storage of publicly available template code."

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action: s3:*
            Effect: Deny
            Resource: !Join ["", [!GetAtt S3Bucket.Arn, "/*"]]
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Principal: "*"
          - Sid: AllowDeployMgmtReadWrite
            Action: s3:*
            Effect: Allow
            Resource:
              - !GetAtt S3Bucket.Arn 
              - !Join ["", [!GetAtt S3Bucket.Arn, "/*"]]
            Principal: 
              AWS: 
                - !Sub "arn:aws:iam::${ManagementAccountID}:role/${ManagementAccountCfnRoleName}"
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${CollectionAccountCfnRoleName}"
                - !Sub "arn:aws:iam::${ManagementAccountID}:role/${ManagementAccountGitSyncRoleName}"
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${CollectionAccountGitSyncRoleName}"













